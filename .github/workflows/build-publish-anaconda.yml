# This workflow builds and publishes the conda package to the Numerics88 channel
# using the openalea/action-build-publish-anaconda action.
name: Conda Build And Publish

on:
    push:
        branches:
            - kean/ci
    workflow_dispatch:

jobs:
    build-and-publish:
        name: Conda deployment
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            # OS types: Windows x64, macOS 13 (last intel based runner), macOS latest (Apple silicon), and Ubuntu x64
            # ------------------------------------------------------
            os: ["macos-latest", "macos-13"]
            python-minor-version: [10]

        steps:
          - name: Checkout repo
            uses: actions/checkout@v4
            with:
              ref: kean/ci
              fetch-depth: 0
          
          - name: Echo Conda Build Sysroot and Mac XCode version and path
            run: |
              echo "CONDA_BUILD_SYSROOT=${{ env.CONDA_BUILD_SYSROOT }}"
              echo "XCODE_SDK=$(xcode-select -p)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
              echo "XCODE_VERSION=$(xcodebuild -version | grep Xcode | awk '{print $2}')"
              echo "XCODE_PATH=$(xcode-select -p)"
              echo "XCODE_SDK_VERSION=$(xcodebuild -showsdks | grep macOS | awk '{print $2}')"
              echo "XCODE_SDK_PATH=$(xcodebuild -showsdks | grep macOS | awk '{print $3}')"

          - name: Set CONDA_BUILD_SYSROOT dynamically
            if: startsWith(matrix.os, 'macos')
            run: |
              if [[ "${{ matrix.os }}" == "macos-13" ]]; then
                echo "CONDA_BUILD_SYSROOT=/Applications/Xcode_14.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk" >> $GITHUB_ENV
                echo "CONDA_BUILD_SYSROOT:" >> ./conda-recipe/vtkbone/conda_build_config.yaml
                echo "  - /Applications/Xcode_14.1.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk" >> ./conda-recipe/vtkbone/conda_build_config.yaml
              elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
                XCODE_SDK="$(xcode-select -p)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
                echo "CONDA_BUILD_SYSROOT=$XCODE_SDK" >> $GITHUB_ENV
                echo "CONDA_BUILD_SYSROOT:" >> ./conda-recipe/vtkbone/conda_build_config.yaml
                echo "  - $XCODE_SDK" >> ./conda-recipe/vtkbone/conda_build_config.yaml
              fi

          - name: (Debug) Echo sdks libraries
            if: startsWith(matrix.os, 'macos')
            run: |
              ls -l /Library/Developer/CommandLineTools/SDKs

          - name: Build and publish
            uses: openalea/action-build-publish-anaconda@v0.1.5
            with:
              conda: conda-recipe/vtkbone
              mamba: false
              python: ${{ matrix.python-minor-version }}
              numpy: '22'
              channels: friedchickean, defaults
              token: ${{ secrets.KEAN_CONDA_TOKEN }}
              publish: true
              label: main

          
          # - name: Setup Conda
          #   uses: conda-incubator/setup-miniconda@v3
          #   with:
          #     python-version: ${{ matrix.python-version }}
          #     auto-update-conda: false
          #     auto-activate-base: true

          # - name: Check if n88 environment is activated
          #   run: |
          #     echo "Current conda environment: $CONDA_DEFAULT_ENV"
          #     echo "Current conda prefix: $CONDA_PREFIX"
          #     echo "Current conda path: $PATH"
          #     echo "Current conda version: $(conda --version)"
          #     echo "Current python version: $(python --version)"
          #     echo "Current pip version: $(pip --version)"
          #     echo "Current conda list: $(conda list)"

          # - name: Install conda-build & anaconda-client
          #   run: |
          #     conda install -y conda-build anaconda-client
        
          # - name: Build Conda package
          #   run: |
          #     echo "Current conda environment: $CONDA_DEFAULT_ENV"
          #     conda build conda-recipe/vtkbone \
          #       -c friedchickean -c defaults \
          #       --python ${{ matrix.python-version }} \
          #       --output-folder build_artifacts

          # - name: Upload Conda package to channel
          #   run: |
          #     PACKAGE_PATH=$(conda build conda-recipe/vtkbone \
          #       -c friedchickean -c conda-forge \
          #       --python ${{ matrix.python-version }} --output)
          #     echo "Uploading $PACKAGE_PATH"
          #     anaconda -t ${{ secrets.KEAN_CONDA_TOKEN }} upload "$PACKAGE_PATH" --label main
            